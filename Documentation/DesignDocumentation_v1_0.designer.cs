// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DocumentationABS.Documentation
{
    using System;
    using System.IO;
    using System.Xml;
    using System.Xml.Serialization;
    using System.Diagnostics;
    using System.Linq;
    using System.Xml.Linq;
    using System.Collections;
    using System.Collections.Generic;
    
    
    #line 1 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class DesignDocumentation_v1_0 : DesignDocumentation_v1_0Base
    {
        public virtual string TransformText()
        {
            this.Write(" \r\n");
            
            #line 18 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
   
	GenerateDocument(CurrentDocument);

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        private global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost hostValue;
        public virtual global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost Host
        {
            get
            {
                return this.hostValue;
            }
            set
            {
                this.hostValue = value;
            }
        }
        
        #line 21 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
 
	public string CurrentXmlFile;
	
	public Tuple<string, string>[] GetGeneratorContent(params string[] xmlFileNames)
	{
		List<DocumentFile> result = new List<DocumentFile>();
		foreach(string xmlFileName in xmlFileNames)
		{
			DocumentationAbstractionType abs = LoadXml<DocumentationAbstractionType>(xmlFileName);
			foreach(DocumentType doc in abs.Documentations.Documents) {
				DocumentFile docFile = GenerateDocumentFile(doc);
				result.Add(docFile);
			}
		}
		return result.Select(docFile => Tuple.Create(docFile.Name, docFile.Content)).ToArray();
	}
	
	void GenerateDocument(DocumentType document)
	{
		GenerateHtmlAndHeadWithStyle();
		GenerateBodyStart();
		GenerateBody(document);
		GenerateBodyEnd();
	}
	
	private DocumentType CurrentDocument;
	
	public DocumentFile GenerateDocumentFile(DocumentType document)
	{
		DocumentFile result = new DocumentFile();
		GenerationEnvironment.Clear();
		result.Name = document.name + ".doc";
		CurrentDocument = document;
		result.Content = TransformText();
		return result;
	}
	
	public DocumentFile[] GenerateDocuments()
	{
		List<DocumentFile> result = new List<DocumentFile>();
		string templateDirectoryName = Path.GetDirectoryName(Host.TemplateFile);
		string directoryName = templateDirectoryName + @"\Content_v1_0";
		directoryName = directoryName.Replace("DocumentationABS", "AbstractionContent");
		string[] xmlFileNames = Directory.GetFiles(directoryName, "*.xml");
		foreach(string xmlFileName in xmlFileNames)
		{
			DocumentationAbstractionType abs = LoadXml<DocumentationAbstractionType>(xmlFileName);
			foreach(DocumentType doc in abs.Documentations.Documents) {
				DocumentFile docFile = GenerateDocumentFile(doc);
				result.Add(docFile);
			}
		}
		return result.ToArray();
	}
	
	void GenerateBody(DocumentType document)
	{
		GenerateTitle(document.title);
		//GenerateTOC(abstraction);
		foreach(HeaderType header in document.Content ?? new HeaderType[0])
			GenerateHeaderAndContent(header);
	}
	
	void GenerateHeaderAndContent(HeaderType header)
	{
		string headerBeginTag = "<h" + header.level + ">";
		string headerEndTag = "</h" + header.level + ">";
		
        
        #line default
        #line hidden
        
        #line 89 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(headerBeginTag));

        
        #line default
        #line hidden
        
        #line 89 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(header.text));

        
        #line default
        #line hidden
        
        #line 89 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(headerEndTag));

        
        #line default
        #line hidden
        
        #line 89 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 90 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

		foreach(TextType text in header.Paragraph ?? new TextType[0])
			GenerateParagraph(text);
		foreach(HeaderType subHeader in header.Header ?? new HeaderType[0])
			GenerateHeaderAndContent(subHeader);
	}
	
	void GenerateParagraph(TextType text)
	{
		string styleText = text.styleRef != null ? " style=\"" + text.styleRef + "\"" : "";
		
        
        #line default
        #line hidden
        
        #line 100 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("<p class=\"MsoNormal\"");

        
        #line default
        #line hidden
        
        #line 101 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(styleText));

        
        #line default
        #line hidden
        
        #line 101 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(" >\r\n");

        
        #line default
        #line hidden
        
        #line 102 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(text.TextContent));

        
        #line default
        #line hidden
        
        #line 102 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\r\n</p>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 104 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

	}
	
	void GenerateTitle(string title)
	{
		
        
        #line default
        #line hidden
        
        #line 109 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("<div style=\'border:none;border-bottom:solid #4F81BD 1.0pt;padding:0cm 0cm 4.0pt 0" +
        "cm\'>\r\n<p class=\"MsoTitle\">");

        
        #line default
        #line hidden
        
        #line 111 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(title));

        
        #line default
        #line hidden
        
        #line 111 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("</p>\r\n</div>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 113 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

	}
	
	void GenerateTableHeaderRow(params string[] data)
	{
		string rowStr = "<tr>" + String.Join("", data.Select(item => "<th><div class=MsoNormal>" + item + "</div></th>").ToArray()) + "</tr>";
		
        
        #line default
        #line hidden
        
        #line 119 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 120 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(rowStr));

        
        #line default
        #line hidden
        
        #line 120 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 121 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

		}
	
	void GenerateTableRowFromData(string color, params string[] data)
	{
		
        
        #line default
        #line hidden
        
        #line 126 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\t\t<tr>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 128 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

		foreach(string item in data)
		{
			string rowStr = "<td><div class=MsoNormal style=\"color:" + color + "\">" + item + "</div></td>";
		
        
        #line default
        #line hidden
        
        #line 132 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 133 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(rowStr));

        
        #line default
        #line hidden
        
        #line 133 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 134 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

		}
		
        
        #line default
        #line hidden
        
        #line 136 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\t\t</tr>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 138 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

	}
/*	
	string GetStatusColor(Operation_v1_0.VariableTypeState state)
	{
		return GetStatusColor(state.ToString());
	}*/
	
	string GetStatusColor(string stateString)
	{
		switch(stateString)
		{
			case "underDesign":
				return "red";
			case "designApproved":
				return "blue";
			case "implemented":
				return "black";
			default:
				throw new NotSupportedException("StateString: " + stateString);
		}
	}
	
	void GenerateTableSectionWithContents(string sectionHeaderType, string sectionTitle, Action populateContents)
	{
		string sectionTagName = ""; // GetOperationTagName(sectionTitle);
		
        
        #line default
        #line hidden
        
        #line 164 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("<");

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sectionHeaderType));

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("><a name=\"");

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sectionTagName));

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\"><span lang=EN-US>");

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sectionTitle));

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("</span></a></");

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sectionHeaderType));

        
        #line default
        #line hidden
        
        #line 165 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(">\r\n<p class=MsoNormal>\r\n<table>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 168 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

		populateContents();		
		
        
        #line default
        #line hidden
        
        #line 170 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("</table>\r\n</p>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 173 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

	}

	/*
	void GenerateOperationParameters(Operation_v1_0.ParametersType parameters)
	{
		GenerateTableSectionWithContents("h2", "Parameters", () => {
			GenerateTableHeaderRow("Name", "DataType", "Description");
			foreach(var parameter in parameters.Parameter)
				GenerateTableRowFromData(GetStatusColor(parameter.state), parameter.name, parameter.dataType, parameter.designDesc);
		});
		
		if(parameters.Items == null)
			return;
		GenerateTableSectionWithContents("h2", "Parameter Preparation", () => {
			GenerateTableHeaderRow("Name", "Affected Parameter(s)", "Description");
			foreach(object obj in parameters.Items)
			{
				Operation_v1_0.ValidationType validationItem = obj as Operation_v1_0.ValidationType;
				Operation_v1_0.ModificationType modificationItem = obj as Operation_v1_0.ModificationType;
				if(validationItem != null) {
					GenerateTableRowFromData(GetStatusColor(validationItem.state), 
						validationItem.name, GetTargetList(", ", validationItem.Target), validationItem.designDesc);
				} else if(modificationItem != null) {
					GenerateTableRowFromData(GetStatusColor(modificationItem.state), 
						modificationItem.name, GetTargetList(", ", modificationItem.Target), modificationItem.designDesc);
				} else 
					throw new NotSupportedException("Preparing item type: " + obj.GetType().Name);
			}
		});
	}*/

	void GenerateBodyStart()
	{
		
        
        #line default
        #line hidden
        
        #line 207 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("<body lang=EN link=blue vlink=purple>\r\n\r\n<div class=WordSection1>\r\n\r\n\t\t\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 213 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

	}

	void GenerateBodyEnd()
	{
		
        
        #line default
        #line hidden
        
        #line 218 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("</div>\r\n\r\n</body>\r\n</html>\r\n\t\t\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 224 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

		
	}
	
	void GenerateHtmlAndHeadWithStyle()
	{
		string charset = System.Text.Encoding.UTF8.WebName;
		
        
        #line default
        #line hidden
        
        #line 231 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("<html>\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html; charset=");

        
        #line default
        #line hidden
        
        #line 234 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(charset));

        
        #line default
        #line hidden
        
        #line 234 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
this.Write("\">\r\n<meta name=Generator content=\"Microsoft Word 14 (filtered)\">\r\n\r\n<style>\r\n<!--" +
        "\r\n /* Font Definitions */\r\n @font-face\r\n\t{font-family:Cambria;\r\n\tpanose-1:2 4 5 " +
        "3 5 4 6 3 2 4;}\r\n@font-face\r\n\t{font-family:Calibri;\r\n\tpanose-1:2 15 5 2 2 2 4 3 " +
        "2 4;}\r\n@font-face\r\n\t{font-family:Tahoma;\r\n\tpanose-1:2 11 6 4 3 5 4 4 2 4;}\r\n /* " +
        "Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n\t{margin-top:0c" +
        "m;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:10.0pt;\r\n\tmargin-left:0cm;\r\n\tline-height:" +
        "115%;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Calibri\",\"sans-serif\";}\r\nh1\r\n\t{mso-styl" +
        "e-link:\"Heading 1 Char\";\r\n\tmargin-top:24.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-botto" +
        "m:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tline-height:115%;\r\n\tpage-br" +
        "eak-after:avoid;\r\n\tfont-size:14.0pt;\r\n\tfont-family:\"Cambria\",\"serif\";\r\n\tcolor:#3" +
        "65F91;}\r\nh2\r\n\t{mso-style-link:\"Heading 2 Char\";\r\n\tmargin-top:10.0pt;\r\n\tmargin-ri" +
        "ght:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tline" +
        "-height:115%;\r\n\tpage-break-after:avoid;\r\n\tfont-size:13.0pt;\r\n\tfont-family:\"Cambr" +
        "ia\",\"serif\";\r\n\tcolor:#4F81BD;}\r\nh3\r\n\t{mso-style-link:\"Heading 3 Char\";\r\n\tmargin-" +
        "top:10.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin" +
        "-bottom:.0001pt;\r\n\tline-height:115%;\r\n\tpage-break-after:avoid;\r\n\tfont-size:11.0p" +
        "t;\r\n\tfont-family:\"Cambria\",\"serif\";\r\n\tcolor:#4F81BD;}\r\np.MsoToc1, li.MsoToc1, di" +
        "v.MsoToc1\r\n\t{margin-top:0cm;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:5.0pt;\r\n\tmargin" +
        "-left:0cm;\r\n\tline-height:115%;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Calibri\",\"sans" +
        "-serif\";}\r\np.MsoToc2, li.MsoToc2, div.MsoToc2\r\n\t{margin-top:0cm;\r\n\tmargin-right:" +
        "0cm;\r\n\tmargin-bottom:5.0pt;\r\n\tmargin-left:11.0pt;\r\n\tline-height:115%;\r\n\tfont-siz" +
        "e:11.0pt;\r\n\tfont-family:\"Calibri\",\"sans-serif\";}\r\np.MsoToc3, li.MsoToc3, div.Mso" +
        "Toc3\r\n\t{margin-top:0cm;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:5.0pt;\r\n\tmargin-left" +
        ":22.0pt;\r\n\tline-height:115%;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Calibri\",\"sans-s" +
        "erif\";}\r\np.MsoTitle, li.MsoTitle, div.MsoTitle\r\n\t{mso-style-link:\"Title Char\";\r\n" +
        "\tmargin-top:0cm;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:15.0pt;\r\n\tmargin-left:0cm;\r" +
        "\n\tborder:none;\r\n\tpadding:0cm;\r\n\tfont-size:26.0pt;\r\n\tfont-family:\"Cambria\",\"serif" +
        "\";\r\n\tcolor:#17365D;\r\n\tletter-spacing:.25pt;}\r\np.MsoTitleCxSpFirst, li.MsoTitleCx" +
        "SpFirst, div.MsoTitleCxSpFirst\r\n\t{mso-style-link:\"Title Char\";\r\n\tmargin:0cm;\r\n\tm" +
        "argin-bottom:.0001pt;\r\n\tborder:none;\r\n\tpadding:0cm;\r\n\tfont-size:26.0pt;\r\n\tfont-f" +
        "amily:\"Cambria\",\"serif\";\r\n\tcolor:#17365D;\r\n\tletter-spacing:.25pt;}\r\np.MsoTitleCx" +
        "SpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle\r\n\t{mso-style-link:\"Title" +
        " Char\";\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tborder:none;\r\n\tpadding:0cm;\r\n\tf" +
        "ont-size:26.0pt;\r\n\tfont-family:\"Cambria\",\"serif\";\r\n\tcolor:#17365D;\r\n\tletter-spac" +
        "ing:.25pt;}\r\np.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast\r\n\t{ms" +
        "o-style-link:\"Title Char\";\r\n\tmargin-top:0cm;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom" +
        ":15.0pt;\r\n\tmargin-left:0cm;\r\n\tborder:none;\r\n\tpadding:0cm;\r\n\tfont-size:26.0pt;\r\n\t" +
        "font-family:\"Cambria\",\"serif\";\r\n\tcolor:#17365D;\r\n\tletter-spacing:.25pt;}\r\na:link" +
        ", span.MsoHyperlink\r\n\t{color:blue;\r\n\ttext-decoration:underline;}\r\na:visited, spa" +
        "n.MsoHyperlinkFollowed\r\n\t{color:purple;\r\n\ttext-decoration:underline;}\r\np.MsoAcet" +
        "ate, li.MsoAcetate, div.MsoAcetate\r\n\t{mso-style-link:\"Balloon Text Char\";\r\n\tmarg" +
        "in:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tfont-size:8.0pt;\r\n\tfont-family:\"Tahoma\",\"sans" +
        "-serif\";}\r\np.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading\r\n\t{margin-top:24" +
        ".0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-botto" +
        "m:.0001pt;\r\n\tline-height:115%;\r\n\tpage-break-after:avoid;\r\n\tfont-size:14.0pt;\r\n\tf" +
        "ont-family:\"Cambria\",\"serif\";\r\n\tcolor:#365F91;\r\n\tfont-weight:bold;}\r\nspan.TitleC" +
        "har\r\n\t{mso-style-name:\"Title Char\";\r\n\tmso-style-link:Title;\r\n\tfont-family:\"Cambr" +
        "ia\",\"serif\";\r\n\tcolor:#17365D;\r\n\tletter-spacing:.25pt;}\r\nspan.Heading1Char\r\n\t{mso" +
        "-style-name:\"Heading 1 Char\";\r\n\tmso-style-link:\"Heading 1\";\r\n\tfont-family:\"Cambr" +
        "ia\",\"serif\";\r\n\tcolor:#365F91;\r\n\tfont-weight:bold;}\r\nspan.Heading2Char\r\n\t{mso-sty" +
        "le-name:\"Heading 2 Char\";\r\n\tmso-style-link:\"Heading 2\";\r\n\tfont-family:\"Cambria\"," +
        "\"serif\";\r\n\tcolor:#4F81BD;\r\n\tfont-weight:bold;}\r\nspan.Heading3Char\r\n\t{mso-style-n" +
        "ame:\"Heading 3 Char\";\r\n\tmso-style-link:\"Heading 3\";\r\n\tfont-family:\"Cambria\",\"ser" +
        "if\";\r\n\tcolor:#4F81BD;\r\n\tfont-weight:bold;}\r\nspan.BalloonTextChar\r\n\t{mso-style-na" +
        "me:\"Balloon Text Char\";\r\n\tmso-style-link:\"Balloon Text\";\r\n\tfont-family:\"Tahoma\"," +
        "\"sans-serif\";}\r\n.MsoChpDefault\r\n\t{font-family:\"Calibri\",\"sans-serif\";}\r\n.MsoPapD" +
        "efault\r\n\t{margin-bottom:10.0pt;\r\n\tline-height:115%;}\r\n@page WordSection1\r\n\t{size" +
        ":595.3pt 841.9pt;\r\n\tmargin:70.85pt 2.0cm 70.85pt 2.0cm;}\r\ndiv.WordSection1\r\n\t{pa" +
        "ge:WordSection1;}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 428 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"

	}

        
        #line default
        #line hidden
        
        #line 431 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\DesignDocumentation_v1_0.tt"
 
	#region Class Level Variable Block
	
	//CQRS_v1_0.DomainType CurrentDomain;
	
	#endregion

        
        #line default
        #line hidden
        
        #line 1 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\..\Common\CommonCodeblocks.ttinclude"
 
	T LoadXml<T>(string xmlFileName) {
		using(FileStream fStream = File.OpenRead(xmlFileName)) {
			XmlSerializer serializer = new XmlSerializer(typeof(T));
			T result = (T) serializer.Deserialize(fStream);
			fStream.Close();
			return result;
		}
	}

	void BeginNamespace(string namespaceName) {
		
        
        #line default
        #line hidden
        
        #line 12 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\..\Common\CommonCodeblocks.ttinclude"
this.Write("namespace ");

        
        #line default
        #line hidden
        
        #line 12 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\..\Common\CommonCodeblocks.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(namespaceName));

        
        #line default
        #line hidden
        
        #line 12 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\..\Common\CommonCodeblocks.ttinclude"
this.Write(" { \r\n\t\t");

        
        #line default
        #line hidden
        
        #line 13 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\..\Common\CommonCodeblocks.ttinclude"
 
	}

	void EndBlock() {
		
        
        #line default
        #line hidden
        
        #line 17 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\..\Common\CommonCodeblocks.ttinclude"
this.Write(" } ");

        
        #line default
        #line hidden
        
        #line 17 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\..\Common\CommonCodeblocks.ttinclude"

	}

		
	static string RemoveScands(string sourceString) {
		return sourceString.Replace('ä', 'a').Replace('Ä', 'A').Replace('å', 'a').Replace('Å', 'A').Replace('ö', 'o').Replace('Ö', 'O');
	}
	
	public class GenerationItem
	{
		public string FileName;
		public string Content;
	}
	

        
        #line default
        #line hidden
        
        #line 1 "C:\GitHub\kallex\private\Demos\CQRS_CustomerBankAccountDemo\Abstractions\DocumentationABS\Documentation\Documentation_v1_0.ttinclude"

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
[System.Xml.Serialization.XmlRootAttribute("DocumentationAbstraction", Namespace="http://tempuri.org/Operation_v1_0.xsd", IsNullable=false)]
public partial class DocumentationAbstractionType {
    
    private DocumentationsType documentationsField;
    
    /// <remarks/>
    public DocumentationsType Documentations {
        get {
            return this.documentationsField;
        }
        set {
            this.documentationsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class DocumentationsType {
    
    private DocumentType[] documentsField;
    
    private PresentationsType presentationsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Document", IsNullable=false)]
    public DocumentType[] Documents {
        get {
            return this.documentsField;
        }
        set {
            this.documentsField = value;
        }
    }
    
    /// <remarks/>
    public PresentationsType Presentations {
        get {
            return this.presentationsField;
        }
        set {
            this.presentationsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class DocumentType {
    
    private StylesType stylesField;
    
    private HeaderType[] contentField;
    
    private string nameField;
    
    private string titleField;
    
    /// <remarks/>
    public StylesType Styles {
        get {
            return this.stylesField;
        }
        set {
            this.stylesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Header", IsNullable=false)]
    public HeaderType[] Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class StylesType {
    
    private StyleType styleField;
    
    /// <remarks/>
    public StyleType Style {
        get {
            return this.styleField;
        }
        set {
            this.styleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class StyleType {
    
    private string nameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class PresentationsType {
    
    private PresentationsTypePresentation presentationField;
    
    /// <remarks/>
    public PresentationsTypePresentation Presentation {
        get {
            return this.presentationField;
        }
        set {
            this.presentationField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class PresentationsTypePresentation {
    
    private PresentationsTypePresentationSlides slidesField;
    
    private string nameField;
    
    private string titleField;
    
    /// <remarks/>
    public PresentationsTypePresentationSlides Slides {
        get {
            return this.slidesField;
        }
        set {
            this.slidesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class PresentationsTypePresentationSlides {
    
    private object slideField;
    
    /// <remarks/>
    public object Slide {
        get {
            return this.slideField;
        }
        set {
            this.slideField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class TextType {
    
    private string textContentField;
    
    private string styleRefField;
    
    /// <remarks/>
    public string TextContent {
        get {
            return this.textContentField;
        }
        set {
            this.textContentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string styleRef {
        get {
            return this.styleRefField;
        }
        set {
            this.styleRefField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class HeaderType {
    
    private TextType[] paragraphField;
    
    private HeaderType[] headerField;
    
    private string textField;
    
    private int levelField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Text", IsNullable=false)]
    public TextType[] Paragraph {
        get {
            return this.paragraphField;
        }
        set {
            this.paragraphField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Header")]
    public HeaderType[] Header {
        get {
            return this.headerField;
        }
        set {
            this.headerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string text {
        get {
            return this.textField;
        }
        set {
            this.textField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public class DesignDocumentation_v1_0Base
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
